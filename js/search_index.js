var search_data = {"index":{"searchIndex":["easypost","client","constants","errors","apierror","badrequesterror","connectionerror","easyposterror","endofpaginationerror","externalapierror","filteringerror","forbiddenerror","gatewaytimeouterror","internalservererror","invalidobjecterror","invalidparametererror","invalidrequesterror","methodnotallowederror","missingparametererror","notfounderror","paymenterror","proxyerror","ratelimiterror","redirecterror","retryerror","serviceunavailableerror","signatureverificationerror","sslerror","timeouterror","unauthorizederror","unknownapierror","hooks","requestcontext","responsecontext","httpclient","internalutilities","constants","json","staticmapper","system","models","model_class","apikey","model_class","brand","model_class","model_class","model_class","model_class","model_class","easypostobject","model_class","error","model_class","model_class","object","model_class","model_class","payload","paymentmethod","model_class","pickuprate","postagelabel","rate","referral","model_class","model_class","model_class","model_class","taxidentifier","model_class","model_class","model_class","services","address","apikey","batch","betarate","betareferralcustomer","billing","carrieraccount","carriermetadata","carriertype","claim","customsinfo","customsitem","endshipper","event","insurance","order","parcel","pickup","rate","referralcustomer","refund","report","scanform","service","shipment","smartrate","tracker","user","webhook","util","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","[]()","[]=()","add_credit_card()","add_payment_method()","add_shipments()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all_api_keys()","all_children()","any_subscribers?()","api_keys()","build_dict_key()","buy()","buy()","buy()","buy()","cancel()","cancel()","collect_error_messages()","convert_json_to_object()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_and_verify()","create_scan_form()","default_request_execute()","delete()","delete()","delete()","delete_payment_method()","estimate_delivery_date()","exception_cls_from_status_code()","form_encode_params()","from_api_error_response()","fund_wallet()","generate_form()","get_all_helper()","get_lowest_object_rate()","get_lowest_smart_rate()","get_lowest_stateless_rate()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page()","get_next_page_of_children()","get_rates()","get_smart_rates()","handle_api_error()","http_response_is_json?()","insure()","label()","label()","lib_version()","lowest_rate()","lowest_rate()","lowest_rate()","lowest_rate()","lowest_rate()","lowest_rate()","lowest_smart_rate()","make_request()","more_pages?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","normalize_string_list()","notify()","objects_to_ids()","os_arch()","os_name()","os_version()","parse_json()","pretty_print()","pretty_print()","pretty_print()","receive_event()","recommend_ship_date()","recommend_ship_date()","refund()","refund()","refund_by_amount()","refund_by_payment_log()","regenerate_rates()","remove_shipments()","request()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve_all_payloads()","retrieve_api_keys_for_user()","retrieve_estimated_delivery_date()","retrieve_me()","retrieve_payload()","retrieve_payment_methods()","retrieve_stateless_rates()","ruby_patchlevel()","ruby_version()","subscribe()","subscribe_request_hook()","subscribe_response_hook()","to_hash()","to_s()","to_snake_case()","unsubscribe()","unsubscribe_all()","unsubscribe_all_request_hooks()","unsubscribe_all_response_hooks()","unsubscribe_request_hook()","unsubscribe_response_hook()","update()","update()","update()","update()","update_brand()","update_email()","validate_webhook()","verify()"],"longSearchIndex":["easypost","easypost::client","easypost::constants","easypost::errors","easypost::errors::apierror","easypost::errors::badrequesterror","easypost::errors::connectionerror","easypost::errors::easyposterror","easypost::errors::endofpaginationerror","easypost::errors::externalapierror","easypost::errors::filteringerror","easypost::errors::forbiddenerror","easypost::errors::gatewaytimeouterror","easypost::errors::internalservererror","easypost::errors::invalidobjecterror","easypost::errors::invalidparametererror","easypost::errors::invalidrequesterror","easypost::errors::methodnotallowederror","easypost::errors::missingparametererror","easypost::errors::notfounderror","easypost::errors::paymenterror","easypost::errors::proxyerror","easypost::errors::ratelimiterror","easypost::errors::redirecterror","easypost::errors::retryerror","easypost::errors::serviceunavailableerror","easypost::errors::signatureverificationerror","easypost::errors::sslerror","easypost::errors::timeouterror","easypost::errors::unauthorizederror","easypost::errors::unknownapierror","easypost::hooks","easypost::hooks::requestcontext","easypost::hooks::responsecontext","easypost::httpclient","easypost::internalutilities","easypost::internalutilities::constants","easypost::internalutilities::json","easypost::internalutilities::staticmapper","easypost::internalutilities::system","easypost::models","easypost::models::address","easypost::models::apikey","easypost::models::batch","easypost::models::brand","easypost::models::carrieraccount","easypost::models::carriertype","easypost::models::claim","easypost::models::customsinfo","easypost::models::customsitem","easypost::models::easypostobject","easypost::models::endshipper","easypost::models::error","easypost::models::event","easypost::models::insurance","easypost::models::object","easypost::models::order","easypost::models::parcel","easypost::models::payload","easypost::models::paymentmethod","easypost::models::pickup","easypost::models::pickuprate","easypost::models::postagelabel","easypost::models::rate","easypost::models::referral","easypost::models::refund","easypost::models::report","easypost::models::scanform","easypost::models::shipment","easypost::models::taxidentifier","easypost::models::tracker","easypost::models::user","easypost::models::webhook","easypost::services","easypost::services::address","easypost::services::apikey","easypost::services::batch","easypost::services::betarate","easypost::services::betareferralcustomer","easypost::services::billing","easypost::services::carrieraccount","easypost::services::carriermetadata","easypost::services::carriertype","easypost::services::claim","easypost::services::customsinfo","easypost::services::customsitem","easypost::services::endshipper","easypost::services::event","easypost::services::insurance","easypost::services::order","easypost::services::parcel","easypost::services::pickup","easypost::services::rate","easypost::services::referralcustomer","easypost::services::refund","easypost::services::report","easypost::services::scanform","easypost::services::service","easypost::services::shipment","easypost::services::smartrate","easypost::services::tracker","easypost::services::user","easypost::services::webhook","easypost::util","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","model_class","easypost::models::object#[]()","easypost::models::object#[]=()","easypost::services::referralcustomer#add_credit_card()","easypost::services::betareferralcustomer#add_payment_method()","easypost::services::batch#add_shipments()","easypost::services::address#all()","easypost::services::apikey#all()","easypost::services::batch#all()","easypost::services::carrieraccount#all()","easypost::services::carriertype#all()","easypost::services::claim#all()","easypost::services::endshipper#all()","easypost::services::event#all()","easypost::services::insurance#all()","easypost::services::pickup#all()","easypost::services::referralcustomer#all()","easypost::services::refund#all()","easypost::services::report#all()","easypost::services::scanform#all()","easypost::services::shipment#all()","easypost::services::tracker#all()","easypost::services::webhook#all()","easypost::services::user#all_api_keys()","easypost::services::user#all_children()","easypost::hooks::any_subscribers?()","easypost::services::user#api_keys()","easypost::internalutilities::build_dict_key()","easypost::services::batch#buy()","easypost::services::order#buy()","easypost::services::pickup#buy()","easypost::services::shipment#buy()","easypost::services::claim#cancel()","easypost::services::pickup#cancel()","easypost::errors::apierror::collect_error_messages()","easypost::internalutilities::json::convert_json_to_object()","easypost::services::address#create()","easypost::services::batch#create()","easypost::services::carrieraccount#create()","easypost::services::claim#create()","easypost::services::customsinfo#create()","easypost::services::customsitem#create()","easypost::services::endshipper#create()","easypost::services::insurance#create()","easypost::services::order#create()","easypost::services::parcel#create()","easypost::services::pickup#create()","easypost::services::referralcustomer#create()","easypost::services::refund#create()","easypost::services::report#create()","easypost::services::scanform#create()","easypost::services::shipment#create()","easypost::services::tracker#create()","easypost::services::user#create()","easypost::services::webhook#create()","easypost::services::address#create_and_verify()","easypost::services::batch#create_scan_form()","easypost::httpclient#default_request_execute()","easypost::services::carrieraccount#delete()","easypost::services::user#delete()","easypost::services::webhook#delete()","easypost::services::billing#delete_payment_method()","easypost::services::smartrate#estimate_delivery_date()","easypost::errors::apierror::exception_cls_from_status_code()","easypost::internalutilities::form_encode_params()","easypost::models::error::from_api_error_response()","easypost::services::billing#fund_wallet()","easypost::services::shipment#generate_form()","easypost::services::service#get_all_helper()","easypost::util::get_lowest_object_rate()","easypost::util::get_lowest_smart_rate()","easypost::util::get_lowest_stateless_rate()","easypost::services::address#get_next_page()","easypost::services::claim#get_next_page()","easypost::services::event#get_next_page()","easypost::services::insurance#get_next_page()","easypost::services::pickup#get_next_page()","easypost::services::referralcustomer#get_next_page()","easypost::services::refund#get_next_page()","easypost::services::report#get_next_page()","easypost::services::scanform#get_next_page()","easypost::services::shipment#get_next_page()","easypost::services::tracker#get_next_page()","easypost::services::user#get_next_page_of_children()","easypost::services::order#get_rates()","easypost::services::shipment#get_smart_rates()","easypost::errors::apierror::handle_api_error()","easypost::internalutilities::json::http_response_is_json?()","easypost::services::shipment#insure()","easypost::services::batch#label()","easypost::services::shipment#label()","easypost::internalutilities::system::lib_version()","easypost::models::order#lowest_rate()","easypost::models::order#lowest_rate()","easypost::models::pickup#lowest_rate()","easypost::models::pickup#lowest_rate()","easypost::models::shipment#lowest_rate()","easypost::models::shipment#lowest_rate()","easypost::services::shipment#lowest_smart_rate()","easypost::client#make_request()","easypost::services::service#more_pages?()","easypost::client::new()","easypost::errors::apierror::new()","easypost::errors::endofpaginationerror::new()","easypost::errors::externalapierror::new()","easypost::errors::invalidparametererror::new()","easypost::errors::missingparametererror::new()","easypost::hooks::requestcontext::new()","easypost::hooks::responsecontext::new()","easypost::httpclient::new()","easypost::models::error::new()","easypost::models::object::new()","easypost::services::service::new()","easypost::internalutilities::normalize_string_list()","easypost::hooks::notify()","easypost::internalutilities::objects_to_ids()","easypost::internalutilities::system::os_arch()","easypost::internalutilities::system::os_name()","easypost::internalutilities::system::os_version()","easypost::internalutilities::json::parse_json()","easypost::errors::apierror#pretty_print()","easypost::errors::easyposterror#pretty_print()","easypost::errors::externalapierror#pretty_print()","easypost::util::receive_event()","easypost::services::shipment#recommend_ship_date()","easypost::services::smartrate#recommend_ship_date()","easypost::services::insurance#refund()","easypost::services::shipment#refund()","easypost::services::betareferralcustomer#refund_by_amount()","easypost::services::betareferralcustomer#refund_by_payment_log()","easypost::services::shipment#regenerate_rates()","easypost::services::batch#remove_shipments()","easypost::httpclient#request()","easypost::services::address#retrieve()","easypost::services::batch#retrieve()","easypost::services::carrieraccount#retrieve()","easypost::services::carriermetadata#retrieve()","easypost::services::claim#retrieve()","easypost::services::customsinfo#retrieve()","easypost::services::customsitem#retrieve()","easypost::services::endshipper#retrieve()","easypost::services::event#retrieve()","easypost::services::insurance#retrieve()","easypost::services::order#retrieve()","easypost::services::parcel#retrieve()","easypost::services::pickup#retrieve()","easypost::services::rate#retrieve()","easypost::services::refund#retrieve()","easypost::services::report#retrieve()","easypost::services::scanform#retrieve()","easypost::services::shipment#retrieve()","easypost::services::tracker#retrieve()","easypost::services::user#retrieve()","easypost::services::webhook#retrieve()","easypost::services::event#retrieve_all_payloads()","easypost::services::apikey#retrieve_api_keys_for_user()","easypost::services::shipment#retrieve_estimated_delivery_date()","easypost::services::user#retrieve_me()","easypost::services::event#retrieve_payload()","easypost::services::billing#retrieve_payment_methods()","easypost::services::betarate#retrieve_stateless_rates()","easypost::internalutilities::system::ruby_patchlevel()","easypost::internalutilities::system::ruby_version()","easypost::hooks::subscribe()","easypost::client#subscribe_request_hook()","easypost::client#subscribe_response_hook()","easypost::models::object#to_hash()","easypost::models::object#to_s()","easypost::internalutilities::to_snake_case()","easypost::hooks::unsubscribe()","easypost::hooks::unsubscribe_all()","easypost::client#unsubscribe_all_request_hooks()","easypost::client#unsubscribe_all_response_hooks()","easypost::client#unsubscribe_request_hook()","easypost::client#unsubscribe_response_hook()","easypost::services::carrieraccount#update()","easypost::services::endshipper#update()","easypost::services::user#update()","easypost::services::webhook#update()","easypost::services::user#update_brand()","easypost::services::referralcustomer#update_email()","easypost::util::validate_webhook()","easypost::services::address#verify()"],"info":[["EasyPost","","EasyPost.html","",""],["EasyPost::Client","","EasyPost/Client.html","",""],["EasyPost::Constants","","EasyPost/Constants.html","",""],["EasyPost::Errors","","EasyPost/Errors.html","",""],["EasyPost::Errors::ApiError","","EasyPost/Errors/ApiError.html","",""],["EasyPost::Errors::BadRequestError","","EasyPost/Errors/BadRequestError.html","",""],["EasyPost::Errors::ConnectionError","","EasyPost/Errors/ConnectionError.html","",""],["EasyPost::Errors::EasyPostError","","EasyPost/Errors/EasyPostError.html","",""],["EasyPost::Errors::EndOfPaginationError","","EasyPost/Errors/EndOfPaginationError.html","",""],["EasyPost::Errors::ExternalApiError","","EasyPost/Errors/ExternalApiError.html","",""],["EasyPost::Errors::FilteringError","","EasyPost/Errors/FilteringError.html","",""],["EasyPost::Errors::ForbiddenError","","EasyPost/Errors/ForbiddenError.html","",""],["EasyPost::Errors::GatewayTimeoutError","","EasyPost/Errors/GatewayTimeoutError.html","",""],["EasyPost::Errors::InternalServerError","","EasyPost/Errors/InternalServerError.html","",""],["EasyPost::Errors::InvalidObjectError","","EasyPost/Errors/InvalidObjectError.html","",""],["EasyPost::Errors::InvalidParameterError","","EasyPost/Errors/InvalidParameterError.html","",""],["EasyPost::Errors::InvalidRequestError","","EasyPost/Errors/InvalidRequestError.html","",""],["EasyPost::Errors::MethodNotAllowedError","","EasyPost/Errors/MethodNotAllowedError.html","",""],["EasyPost::Errors::MissingParameterError","","EasyPost/Errors/MissingParameterError.html","",""],["EasyPost::Errors::NotFoundError","","EasyPost/Errors/NotFoundError.html","",""],["EasyPost::Errors::PaymentError","","EasyPost/Errors/PaymentError.html","",""],["EasyPost::Errors::ProxyError","","EasyPost/Errors/ProxyError.html","",""],["EasyPost::Errors::RateLimitError","","EasyPost/Errors/RateLimitError.html","",""],["EasyPost::Errors::RedirectError","","EasyPost/Errors/RedirectError.html","",""],["EasyPost::Errors::RetryError","","EasyPost/Errors/RetryError.html","",""],["EasyPost::Errors::ServiceUnavailableError","","EasyPost/Errors/ServiceUnavailableError.html","",""],["EasyPost::Errors::SignatureVerificationError","","EasyPost/Errors/SignatureVerificationError.html","",""],["EasyPost::Errors::SslError","","EasyPost/Errors/SslError.html","",""],["EasyPost::Errors::TimeoutError","","EasyPost/Errors/TimeoutError.html","",""],["EasyPost::Errors::UnauthorizedError","","EasyPost/Errors/UnauthorizedError.html","",""],["EasyPost::Errors::UnknownApiError","","EasyPost/Errors/UnknownApiError.html","",""],["EasyPost::Hooks","","EasyPost/Hooks.html","",""],["EasyPost::Hooks::RequestContext","","EasyPost/Hooks/RequestContext.html","",""],["EasyPost::Hooks::ResponseContext","","EasyPost/Hooks/ResponseContext.html","",""],["EasyPost::HttpClient","","EasyPost/HttpClient.html","",""],["EasyPost::InternalUtilities","","EasyPost/InternalUtilities.html","",""],["EasyPost::InternalUtilities::Constants","","EasyPost/InternalUtilities/Constants.html","",""],["EasyPost::InternalUtilities::Json","","EasyPost/InternalUtilities/Json.html","",""],["EasyPost::InternalUtilities::StaticMapper","","EasyPost/InternalUtilities/StaticMapper.html","",""],["EasyPost::InternalUtilities::System","","EasyPost/InternalUtilities/System.html","",""],["EasyPost::Models","","EasyPost/Models.html","",""],["EasyPost::Models::Address","","EasyPost/Models/Address.html","","<p>Address objects are used to represent people, places, and organizations in a number of contexts.\n"],["EasyPost::Models::ApiKey","","EasyPost/Models/ApiKey.html","","<p>An ApiKey object that has your EasyPost API.\n"],["EasyPost::Models::Batch","","EasyPost/Models/Batch.html","","<p>The Batch object allows you to perform operations on multiple Shipments at once.\n"],["EasyPost::Models::Brand","","EasyPost/Models/Brand.html","","<p>The Brand object allows you to customize the publicly-accessible html page that shows tracking details …\n"],["EasyPost::Models::CarrierAccount","","EasyPost/Models/CarrierAccount.html","","<p>A CarrierAccount encapsulates your credentials with the carrier.\n"],["EasyPost::Models::CarrierType","","EasyPost/Models/CarrierType.html","","<p>A CarrierType details the valid fields for a CarrierAccount.\n"],["EasyPost::Models::Claim","","EasyPost/Models/Claim.html","","<p>The Claim object has all the details for the filed claims\n"],["EasyPost::Models::CustomsInfo","","EasyPost/Models/CustomsInfo.html","","<p>CustomsInfo objects contain CustomsItem objects and all necessary information for the generation of customs …\n"],["EasyPost::Models::CustomsItem","","EasyPost/Models/CustomsItem.html","","<p>A CustomsItem object describes goods for international shipment and should be created then included in …\n"],["EasyPost::Models::EasyPostObject","","EasyPost/Models/EasyPostObject.html","","<p>The base class for all API objects in the library that have an ID (plus optional timestamps).\n"],["EasyPost::Models::EndShipper","","EasyPost/Models/EndShipper.html","","<p>EndShipper objects are fully-qualified Address objects that require all parameters and get verified upon …\n"],["EasyPost::Models::Error","","EasyPost/Models/Error.html","","<p>EasyPost Error object.\n"],["EasyPost::Models::Event","","EasyPost/Models/Event.html","","<p>Webhook Events are triggered by changes in objects you’ve created via the API.\n"],["EasyPost::Models::Insurance","","EasyPost/Models/Insurance.html","","<p>An Insurance object represents insurance for packages purchased both via the EasyPost API as well as …\n"],["EasyPost::Models::Object","","EasyPost/Models/Object.html","","<p>The base class for all JSON objects in the library.\n"],["EasyPost::Models::Order","","EasyPost/Models/Order.html","","<p>The Order object represents a collection of packages and can be used for Multi-Piece Shipments.\n"],["EasyPost::Models::Parcel","","EasyPost/Models/Parcel.html","","<p>Parcel objects represent the physical container being shipped.\n"],["EasyPost::Models::Payload","","EasyPost/Models/Payload.html","","<p>Webhook Event Payloads are triggered by changes in objects you’ve created via the API.\n"],["EasyPost::Models::PaymentMethod","","EasyPost/Models/PaymentMethod.html","","<p>PaymentMethod objects represent a payment method of a user.\n"],["EasyPost::Models::Pickup","","EasyPost/Models/Pickup.html","","<p>The Pickup object allows you to schedule a pickup from your carrier from your customer’s residence …\n"],["EasyPost::Models::PickupRate","","EasyPost/Models/PickupRate.html","","<p>A PickupRate is the rate available for a Pickup.\n"],["EasyPost::Models::PostageLabel","","EasyPost/Models/PostageLabel.html","","<p>PostageLabel is the object containing details about the shipping label.\n"],["EasyPost::Models::Rate","","EasyPost/Models/Rate.html","","<p>A Rate object contains all the details about the rate of a Shipment.\n"],["EasyPost::Models::Referral","","EasyPost/Models/Referral.html","","<p>ReferralCustomer objects are User objects created from a Partner user.\n"],["EasyPost::Models::Refund","","EasyPost/Models/Refund.html","","<p>The Refund object contains details about the Refund of a Shipment.\n"],["EasyPost::Models::Report","","EasyPost/Models/Report.html","","<p>A Report contains a csv that is a log of all the objects created within a certain time frame.\n"],["EasyPost::Models::ScanForm","","EasyPost/Models/ScanForm.html","","<p>A ScanForm can be created to speed up and simplify the carrier pickup process. The ScanForm is one document …\n"],["EasyPost::Models::Shipment","","EasyPost/Models/Shipment.html","","<p>The workhorse of the EasyPost API, a Shipment is made up of a “to” and “from” Address …\n"],["EasyPost::Models::TaxIdentifier","","EasyPost/Models/TaxIdentifier.html","","<p>TaxIdentifiers are identifying numbers or IDs that are used to charge a specific party when dealing with …\n"],["EasyPost::Models::Tracker","","EasyPost/Models/Tracker.html","","<p>A Tracker object contains all of the tracking information for a package.\n"],["EasyPost::Models::User","","EasyPost/Models/User.html","","<p>The User object can be used to manage your own account and to create child accounts.\n"],["EasyPost::Models::Webhook","","EasyPost/Models/Webhook.html","","<p>Each Webhook contains the url which EasyPost will notify whenever an object in our system updates. Several …\n"],["EasyPost::Services","","EasyPost/Services.html","",""],["EasyPost::Services::Address","","EasyPost/Services/Address.html","",""],["EasyPost::Services::ApiKey","","EasyPost/Services/ApiKey.html","",""],["EasyPost::Services::Batch","","EasyPost/Services/Batch.html","",""],["EasyPost::Services::BetaRate","","EasyPost/Services/BetaRate.html","",""],["EasyPost::Services::BetaReferralCustomer","","EasyPost/Services/BetaReferralCustomer.html","",""],["EasyPost::Services::Billing","","EasyPost/Services/Billing.html","",""],["EasyPost::Services::CarrierAccount","","EasyPost/Services/CarrierAccount.html","",""],["EasyPost::Services::CarrierMetadata","","EasyPost/Services/CarrierMetadata.html","",""],["EasyPost::Services::CarrierType","","EasyPost/Services/CarrierType.html","",""],["EasyPost::Services::Claim","","EasyPost/Services/Claim.html","",""],["EasyPost::Services::CustomsInfo","","EasyPost/Services/CustomsInfo.html","",""],["EasyPost::Services::CustomsItem","","EasyPost/Services/CustomsItem.html","",""],["EasyPost::Services::EndShipper","","EasyPost/Services/EndShipper.html","",""],["EasyPost::Services::Event","","EasyPost/Services/Event.html","",""],["EasyPost::Services::Insurance","","EasyPost/Services/Insurance.html","",""],["EasyPost::Services::Order","","EasyPost/Services/Order.html","",""],["EasyPost::Services::Parcel","","EasyPost/Services/Parcel.html","",""],["EasyPost::Services::Pickup","","EasyPost/Services/Pickup.html","",""],["EasyPost::Services::Rate","","EasyPost/Services/Rate.html","",""],["EasyPost::Services::ReferralCustomer","","EasyPost/Services/ReferralCustomer.html","",""],["EasyPost::Services::Refund","","EasyPost/Services/Refund.html","",""],["EasyPost::Services::Report","","EasyPost/Services/Report.html","",""],["EasyPost::Services::ScanForm","","EasyPost/Services/ScanForm.html","",""],["EasyPost::Services::Service","","EasyPost/Services/Service.html","","<p>The base class for all services in the library.\n"],["EasyPost::Services::Shipment","","EasyPost/Services/Shipment.html","",""],["EasyPost::Services::SmartRate","","EasyPost/Services/SmartRate.html","",""],["EasyPost::Services::Tracker","","EasyPost/Services/Tracker.html","",""],["EasyPost::Services::User","","EasyPost/Services/User.html","",""],["EasyPost::Services::Webhook","","EasyPost/Services/Webhook.html","",""],["EasyPost::Util","","EasyPost/Util.html","","<p>Client Library helper functions\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>Address objects are used to represent people, places, and organizations in a number of contexts.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The Batch object allows you to perform operations on multiple Shipments at once.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>A CarrierAccount encapsulates your credentials with the carrier.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>A CarrierType details the valid fields for a CarrierAccount.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The Claim object has all the details for the filed claims\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>CustomsInfo objects contain CustomsItem objects and all necessary information for the generation of customs …\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>A CustomsItem object describes goods for international shipment and should be created then included in …\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>EndShipper objects are fully-qualified Address objects that require all parameters and get verified upon …\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>Webhook Events are triggered by changes in objects you’ve created via the API.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>An Insurance object represents insurance for packages purchased both via the EasyPost API as well as …\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The Order object represents a collection of packages and can be used for Multi-Piece Shipments.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>Parcel objects represent the physical container being shipped.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The Pickup object allows you to schedule a pickup from your carrier from your customer’s residence …\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The User object can be used to manage your own account and to create child accounts.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The Refund object contains details about the Refund of a Shipment.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>A Report contains a csv that is a log of all the objects created within a certain time frame.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>A ScanForm can be created to speed up and simplify the carrier pickup process. The ScanForm is one document …\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The workhorse of the EasyPost API, a Shipment is made up of a “to” and “from” Address …\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>A Tracker object contains all of the tracking information for a package.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>The User object can be used to manage your own account and to create child accounts.\n"],["MODEL_CLASS","","MODEL_CLASS.html","","<p>Each Webhook contains the url which EasyPost will notify whenever an object in our system updates. Several …\n"],["[]","EasyPost::Models::Object","EasyPost/Models/Object.html#method-i-5B-5D","(key)","<p>Get element of an array.\n"],["[]=","EasyPost::Models::Object","EasyPost/Models/Object.html#method-i-5B-5D-3D","(key, value)","<p>Set the element of an array.\n"],["add_credit_card","EasyPost::Services::ReferralCustomer","EasyPost/Services/ReferralCustomer.html#method-i-add_credit_card","(referral_api_key, number, expiration_month, expiration_year, cvc, priority = 'primary')","<p>Add credit card to a referral customer. This function requires the ReferralCustomer Customer’s API …\n"],["add_payment_method","EasyPost::Services::BetaReferralCustomer","EasyPost/Services/BetaReferralCustomer.html#method-i-add_payment_method","(stripe_customer_id, payment_method_reference, priority = 'primary')","<p>Add a Stripe payment method to a ReferralCustomer Customer. This function requires the ReferralCustomer …\n"],["add_shipments","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-add_shipments","(id, params = {})","<p>Add Shipments to a Batch.\n"],["all","EasyPost::Services::Address","EasyPost/Services/Address.html#method-i-all","(params = {})","<p>Retrieve all Addresses.\n"],["all","EasyPost::Services::ApiKey","EasyPost/Services/ApiKey.html#method-i-all","()","<p>Retrieve a list of all ApiKey objects.\n"],["all","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-all","(params = {})",""],["all","EasyPost::Services::CarrierAccount","EasyPost/Services/CarrierAccount.html#method-i-all","(params = {})","<p>Retrieve all carrier accounts\n"],["all","EasyPost::Services::CarrierType","EasyPost/Services/CarrierType.html#method-i-all","()","<p>Retrieve all carrier types\n"],["all","EasyPost::Services::Claim","EasyPost/Services/Claim.html#method-i-all","(params = {})","<p>Retrieve all Claim objects\n"],["all","EasyPost::Services::EndShipper","EasyPost/Services/EndShipper.html#method-i-all","(params = {})","<p>Retrieve all EndShipper objects.\n"],["all","EasyPost::Services::Event","EasyPost/Services/Event.html#method-i-all","(params = {})","<p>Retrieve all Event objects\n"],["all","EasyPost::Services::Insurance","EasyPost/Services/Insurance.html#method-i-all","(params = {})","<p>Retrieve all Insurance objects\n"],["all","EasyPost::Services::Pickup","EasyPost/Services/Pickup.html#method-i-all","(params = {})","<p>Retrieve all Pickup objects\n"],["all","EasyPost::Services::ReferralCustomer","EasyPost/Services/ReferralCustomer.html#method-i-all","(params = {})","<p>Retrieve a list of referral customers. This function requires the Partner User’s API key.\n"],["all","EasyPost::Services::Refund","EasyPost/Services/Refund.html#method-i-all","(params = {})","<p>Retrieve all Refund objects\n"],["all","EasyPost::Services::Report","EasyPost/Services/Report.html#method-i-all","(params = {})","<p>Retrieve all Report objects\n"],["all","EasyPost::Services::ScanForm","EasyPost/Services/ScanForm.html#method-i-all","(params = {})","<p>Retrieve a list of ScanForms\n"],["all","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-all","(params = {})","<p>Retrieve a list of Shipments\n"],["all","EasyPost::Services::Tracker","EasyPost/Services/Tracker.html#method-i-all","(params = {})","<p>Retrieve a list of Trackers\n"],["all","EasyPost::Services::Webhook","EasyPost/Services/Webhook.html#method-i-all","(params = {})","<p>Retrieve a list of Webhooks\n"],["all_api_keys","EasyPost::Services::User","EasyPost/Services/User.html#method-i-all_api_keys","()","<p>Retrieve a list of all ApiKey objects.\n"],["all_children","EasyPost::Services::User","EasyPost/Services/User.html#method-i-all_children","(params = {})","<p>Retrieve all child Users.\n"],["any_subscribers?","EasyPost::Hooks","EasyPost/Hooks.html#method-c-any_subscribers-3F","(type)",""],["api_keys","EasyPost::Services::User","EasyPost/Services/User.html#method-i-api_keys","(id)","<p>Retrieve a list of ApiKey objects (works for the authenticated user or a child user).\n"],["build_dict_key","EasyPost::InternalUtilities","EasyPost/InternalUtilities.html#method-c-build_dict_key","(keys)","<p>Build a dict key from a list of keys. Example: [code, number] -&gt; code\n"],["buy","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-buy","(id, params = {})","<p>Buy a Batch.\n"],["buy","EasyPost::Services::Order","EasyPost/Services/Order.html#method-i-buy","(id, params = {})","<p>Buy an Order object\n"],["buy","EasyPost::Services::Pickup","EasyPost/Services/Pickup.html#method-i-buy","(id, params = {})","<p>Buy a Pickup\n"],["buy","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-buy","(id, params = {}, end_shipper_id = nil)","<p>Buy a Shipment.\n"],["cancel","EasyPost::Services::Claim","EasyPost/Services/Claim.html#method-i-cancel","(id)","<p>Cancel a filed claim\n"],["cancel","EasyPost::Services::Pickup","EasyPost/Services/Pickup.html#method-i-cancel","(id, params = {})","<p>Cancel a Pickup\n"],["collect_error_messages","EasyPost::Errors::ApiError","EasyPost/Errors/ApiError.html#method-c-collect_error_messages","(error_message, messages_list)","<p>Recursively traverses a JSON element to extract error messages and returns them as a comma-separated …\n"],["convert_json_to_object","EasyPost::InternalUtilities::Json","EasyPost/InternalUtilities/Json.html#method-c-convert_json_to_object","(data, cls = EasyPost::Models::EasyPostObject)",""],["create","EasyPost::Services::Address","EasyPost/Services/Address.html#method-i-create","(params = {})","<p>Create an address.\n"],["create","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-create","(params = {})","<p>Create a Batch.\n"],["create","EasyPost::Services::CarrierAccount","EasyPost/Services/CarrierAccount.html#method-i-create","(params = {})","<p>Create a carrier account\n"],["create","EasyPost::Services::Claim","EasyPost/Services/Claim.html#method-i-create","(params = {})","<p>Create an Claim object\n"],["create","EasyPost::Services::CustomsInfo","EasyPost/Services/CustomsInfo.html#method-i-create","(params)","<p>Create a CustomsInfo object\n"],["create","EasyPost::Services::CustomsItem","EasyPost/Services/CustomsItem.html#method-i-create","(params)","<p>Create a CustomsItem object\n"],["create","EasyPost::Services::EndShipper","EasyPost/Services/EndShipper.html#method-i-create","(params = {})","<p>Create an EndShipper object.\n"],["create","EasyPost::Services::Insurance","EasyPost/Services/Insurance.html#method-i-create","(params = {})","<p>Create an Insurance object\n"],["create","EasyPost::Services::Order","EasyPost/Services/Order.html#method-i-create","(params = {})","<p>Create an Order object\n"],["create","EasyPost::Services::Parcel","EasyPost/Services/Parcel.html#method-i-create","(params = {})","<p>Create a Parcel object\n"],["create","EasyPost::Services::Pickup","EasyPost/Services/Pickup.html#method-i-create","(params = {})","<p>Create a Pickup object\n"],["create","EasyPost::Services::ReferralCustomer","EasyPost/Services/ReferralCustomer.html#method-i-create","(params = {})","<p>Create a referral customer. This function requires the Partner User’s API key.\n"],["create","EasyPost::Services::Refund","EasyPost/Services/Refund.html#method-i-create","(params = {})","<p>Create a Refund object\n"],["create","EasyPost::Services::Report","EasyPost/Services/Report.html#method-i-create","(params = {})","<p>Create a Report\n"],["create","EasyPost::Services::ScanForm","EasyPost/Services/ScanForm.html#method-i-create","(params = {})","<p>Create a ScanForm.\n"],["create","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-create","(params = {})","<p>Create a Shipment.\n"],["create","EasyPost::Services::Tracker","EasyPost/Services/Tracker.html#method-i-create","(params = {})","<p>Create a Tracker\n"],["create","EasyPost::Services::User","EasyPost/Services/User.html#method-i-create","(params = {})","<p>Create a child User.\n"],["create","EasyPost::Services::Webhook","EasyPost/Services/Webhook.html#method-i-create","(params = {})","<p>Create a Webhook.\n"],["create_and_verify","EasyPost::Services::Address","EasyPost/Services/Address.html#method-i-create_and_verify","(params = {})","<p>Create and verify an Address in one call.\n"],["create_scan_form","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-create_scan_form","(id, params = {})","<p>Create a ScanForm for a Batch.\n"],["default_request_execute","EasyPost::HttpClient","EasyPost/HttpClient.html#method-i-default_request_execute","(method, uri, headers, open_timeout, read_timeout, body = nil)",""],["delete","EasyPost::Services::CarrierAccount","EasyPost/Services/CarrierAccount.html#method-i-delete","(id)","<p>Delete a carrier account\n"],["delete","EasyPost::Services::User","EasyPost/Services/User.html#method-i-delete","(id)","<p>Delete a User\n"],["delete","EasyPost::Services::Webhook","EasyPost/Services/Webhook.html#method-i-delete","(id)","<p>Delete a Webhook.\n"],["delete_payment_method","EasyPost::Services::Billing","EasyPost/Services/Billing.html#method-i-delete_payment_method","(priority)","<p>Delete a payment method.\n"],["estimate_delivery_date","EasyPost::Services::SmartRate","EasyPost/Services/SmartRate.html#method-i-estimate_delivery_date","(params = {})","<p>Retrieve the estimated delivery date of each carrier-service level combination via the Smart Deliver …\n"],["exception_cls_from_status_code","EasyPost::Errors::ApiError","EasyPost/Errors/ApiError.html#method-c-exception_cls_from_status_code","(status_code)",""],["form_encode_params","EasyPost::InternalUtilities","EasyPost/InternalUtilities.html#method-c-form_encode_params","(hash, parent_keys = [], parent_dict = {})","<p>Form-encode a multi-layer dictionary to a one-layer dictionary.\n"],["from_api_error_response","EasyPost::Models::Error","EasyPost/Models/Error.html#method-c-from_api_error_response","(data)","<p>Create an EasyPost Error from an API error response.\n"],["fund_wallet","EasyPost::Services::Billing","EasyPost/Services/Billing.html#method-i-fund_wallet","(amount, priority = 'primary')","<p>Fund your EasyPost wallet by charging your primary or secondary card on file.\n"],["generate_form","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-generate_form","(id, form_type, form_options = {})","<p>Generate a form for a Shipment.\n"],["get_all_helper","EasyPost::Services::Service","EasyPost/Services/Service.html#method-i-get_all_helper","(endpoint, cls, params, filters = nil, beta = false)",""],["get_lowest_object_rate","EasyPost::Util","EasyPost/Util.html#method-c-get_lowest_object_rate","(easypost_object, carriers = [], services = [], rates_key = 'rates')","<p>Gets the lowest rate of an EasyPost object such as a Shipment, Order, or Pickup. You can exclude by having …\n"],["get_lowest_smart_rate","EasyPost::Util","EasyPost/Util.html#method-c-get_lowest_smart_rate","(smart_rates, delivery_days, delivery_accuracy)","<p>Get the lowest SmartRate from a list of SmartRate.\n"],["get_lowest_stateless_rate","EasyPost::Util","EasyPost/Util.html#method-c-get_lowest_stateless_rate","(stateless_rates, carriers = [], services = [])","<p>Gets the lowest stateless rate. You can exclude by having ‘’!‘` as the first element of your …\n"],["get_next_page","EasyPost::Services::Address","EasyPost/Services/Address.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of addresses.\n"],["get_next_page","EasyPost::Services::Claim","EasyPost/Services/Claim.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of claims.\n"],["get_next_page","EasyPost::Services::Event","EasyPost/Services/Event.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of events.\n"],["get_next_page","EasyPost::Services::Insurance","EasyPost/Services/Insurance.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of insurances.\n"],["get_next_page","EasyPost::Services::Pickup","EasyPost/Services/Pickup.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get next page of Pickups\n"],["get_next_page","EasyPost::Services::ReferralCustomer","EasyPost/Services/ReferralCustomer.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of referral customers.\n"],["get_next_page","EasyPost::Services::Refund","EasyPost/Services/Refund.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of refunds\n"],["get_next_page","EasyPost::Services::Report","EasyPost/Services/Report.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get next page of Report objects\n"],["get_next_page","EasyPost::Services::ScanForm","EasyPost/Services/ScanForm.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of ScanForms.\n"],["get_next_page","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of shipments.\n"],["get_next_page","EasyPost::Services::Tracker","EasyPost/Services/Tracker.html#method-i-get_next_page","(collection, page_size = nil)","<p>Get the next page of trackers.\n"],["get_next_page_of_children","EasyPost::Services::User","EasyPost/Services/User.html#method-i-get_next_page_of_children","(collection, page_size = nil)","<p>Get the next page of child users.\n"],["get_rates","EasyPost::Services::Order","EasyPost/Services/Order.html#method-i-get_rates","(id, params = {})","<p>Retrieve new rates for an Order object\n"],["get_smart_rates","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-get_smart_rates","(id)","<p>Get the SmartRates of a Shipment.\n"],["handle_api_error","EasyPost::Errors::ApiError","EasyPost/Errors/ApiError.html#method-c-handle_api_error","(response)",""],["http_response_is_json?","EasyPost::InternalUtilities::Json","EasyPost/InternalUtilities/Json.html#method-c-http_response_is_json-3F","(response)",""],["insure","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-insure","(id, params = {})","<p>Insure a Shipment.\n"],["label","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-label","(id, params = {})","<p>Convert the label format of a Batch.\n"],["label","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-label","(id, params = {})","<p>Convert the label format of a Shipment.\n"],["lib_version","EasyPost::InternalUtilities::System","EasyPost/InternalUtilities/System.html#method-c-lib_version","()",""],["lowest_rate","EasyPost::Models::Order","EasyPost/Models/Order.html#method-i-lowest_rate","(carriers = [], services = [])","<p>Get the lowest rate of an Order (can exclude by having ‘’!‘` as the first element of your optional …\n"],["lowest_rate","EasyPost::Models::Order","EasyPost/Models/Order.html#method-i-lowest_rate","(carriers = [], services = [])","<p>Get the lowest rate of an Order (can exclude by having ‘’!‘` as the first element of your optional …\n"],["lowest_rate","EasyPost::Models::Pickup","EasyPost/Models/Pickup.html#method-i-lowest_rate","(carriers = [], services = [])","<p>Get the lowest rate of a Pickup (can exclude by having ‘’!‘` as the first element of your optional …\n"],["lowest_rate","EasyPost::Models::Pickup","EasyPost/Models/Pickup.html#method-i-lowest_rate","(carriers = [], services = [])","<p>Get the lowest rate of a Pickup (can exclude by having ‘’!‘` as the first element of your optional …\n"],["lowest_rate","EasyPost::Models::Shipment","EasyPost/Models/Shipment.html#method-i-lowest_rate","(carriers = [], services = [])","<p>Get the lowest rate of a Shipment (can exclude by having ‘’!‘` as the first element of your optional …\n"],["lowest_rate","EasyPost::Models::Shipment","EasyPost/Models/Shipment.html#method-i-lowest_rate","(carriers = [], services = [])","<p>Get the lowest rate of a Shipment (can exclude by having ‘’!‘` as the first element of your optional …\n"],["lowest_smart_rate","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-lowest_smart_rate","(id, delivery_days, delivery_accuracy)","<p>Get the lowest SmartRate of a Shipment.\n"],["make_request","EasyPost::Client","EasyPost/Client.html#method-i-make_request","( method, endpoint, params = nil, api_version = EasyPost::InternalUtilities::Constants::API_VERSION )","<p>Make an HTTP request\n<p>@param method [Symbol] the HTTP Verb (get, method, put, post, etc.) @param endpoint …\n"],["more_pages?","EasyPost::Services::Service","EasyPost/Services/Service.html#method-i-more_pages-3F","(collection)",""],["new","EasyPost::Client","EasyPost/Client.html#method-c-new","(api_key:, read_timeout: 60, open_timeout: 30, api_base: 'https://api.easypost.com', custom_client_exec: nil)","<p>Initialize a new Client object @param api_key [String] the API key to be used for requests @param read_timeout …\n"],["new","EasyPost::Errors::ApiError","EasyPost/Errors/ApiError.html#method-c-new","(message, status_code = nil, error_code = nil, sub_errors = nil)",""],["new","EasyPost::Errors::EndOfPaginationError","EasyPost/Errors/EndOfPaginationError.html#method-c-new","()",""],["new","EasyPost::Errors::ExternalApiError","EasyPost/Errors/ExternalApiError.html#method-c-new","(message, status_code = nil)",""],["new","EasyPost::Errors::InvalidParameterError","EasyPost/Errors/InvalidParameterError.html#method-c-new","(parameter, suggestion = nil)","<p>@param [String] parameter The name of the parameter that was invalid. @param [String] suggestion Optional …\n"],["new","EasyPost::Errors::MissingParameterError","EasyPost/Errors/MissingParameterError.html#method-c-new","(parameter)",""],["new","EasyPost::Hooks::RequestContext","EasyPost/Hooks/RequestContext.html#method-c-new","(method:, path:, headers:, request_body:, request_timestamp:, request_uuid:)",""],["new","EasyPost::Hooks::ResponseContext","EasyPost/Hooks/ResponseContext.html#method-c-new","(http_status:, method:, path:, headers:, response_body:, request_timestamp:, response_timestamp:, request_uuid:, client_response_object:)",""],["new","EasyPost::HttpClient","EasyPost/HttpClient.html#method-c-new","(base_url, config, custom_client_exec = nil)",""],["new","EasyPost::Models::Error","EasyPost/Models/Error.html#method-c-new","(code, field = nil, message = nil)","<p>Initialize a new EasyPost Error\n"],["new","EasyPost::Models::Object","EasyPost/Models/Object.html#method-c-new","(data)",""],["new","EasyPost::Services::Service","EasyPost/Services/Service.html#method-c-new","(client)",""],["normalize_string_list","EasyPost::InternalUtilities","EasyPost/InternalUtilities.html#method-c-normalize_string_list","(lst)","<p>Normalizes a list of strings.\n"],["notify","EasyPost::Hooks","EasyPost/Hooks.html#method-c-notify","(type, context)",""],["objects_to_ids","EasyPost::InternalUtilities","EasyPost/InternalUtilities.html#method-c-objects_to_ids","(obj)","<p>Converts an object to an object ID.\n"],["os_arch","EasyPost::InternalUtilities::System","EasyPost/InternalUtilities/System.html#method-c-os_arch","()",""],["os_name","EasyPost::InternalUtilities::System","EasyPost/InternalUtilities/System.html#method-c-os_name","()",""],["os_version","EasyPost::InternalUtilities::System","EasyPost/InternalUtilities/System.html#method-c-os_version","()",""],["parse_json","EasyPost::InternalUtilities::Json","EasyPost/InternalUtilities/Json.html#method-c-parse_json","(data)",""],["pretty_print","EasyPost::Errors::ApiError","EasyPost/Errors/ApiError.html#method-i-pretty_print","()",""],["pretty_print","EasyPost::Errors::EasyPostError","EasyPost/Errors/EasyPostError.html#method-i-pretty_print","()",""],["pretty_print","EasyPost::Errors::ExternalApiError","EasyPost/Errors/ExternalApiError.html#method-i-pretty_print","()",""],["receive_event","EasyPost::Util","EasyPost/Util.html#method-c-receive_event","(raw_input)","<p>Converts a raw webhook event into an EasyPost object.\n"],["recommend_ship_date","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-recommend_ship_date","(id, desired_delivery_date)","<p>Retrieve a recommended ship date for an existing Shipment via the Precision Shipping API, based on a …\n"],["recommend_ship_date","EasyPost::Services::SmartRate","EasyPost/Services/SmartRate.html#method-i-recommend_ship_date","(params = {})","<p>Retrieve a recommended ship date for each carrier-service level combination via the Smart Deliver On …\n"],["refund","EasyPost::Services::Insurance","EasyPost/Services/Insurance.html#method-i-refund","(id)","<p>Refund an Insurance object\n"],["refund","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-refund","(id, params = {})","<p>Refund a Shipment.\n"],["refund_by_amount","EasyPost::Services::BetaReferralCustomer","EasyPost/Services/BetaReferralCustomer.html#method-i-refund_by_amount","(amount)","<p>Refund a ReferralCustomer Customer’s wallet by a specified amount. Refund will be issued to the user’s …\n"],["refund_by_payment_log","EasyPost::Services::BetaReferralCustomer","EasyPost/Services/BetaReferralCustomer.html#method-i-refund_by_payment_log","(payment_log_id)","<p>Refund a ReferralCustomer Customer’s wallet for a specified payment log entry. Refund will be issued …\n"],["regenerate_rates","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-regenerate_rates","(id)","<p>Regenerate the rates of a Shipment.\n"],["remove_shipments","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-remove_shipments","(id, params = {})","<p>Remove Shipments from a Batch.\n"],["request","EasyPost::HttpClient","EasyPost/HttpClient.html#method-i-request","( method, path, headers = nil, params = nil, api_version = EasyPost::InternalUtilities::Constants::API_VERSION )","<p>Execute an HTTP request to the API.\n"],["retrieve","EasyPost::Services::Address","EasyPost/Services/Address.html#method-i-retrieve","(id)","<p>Retrieve an Address.\n"],["retrieve","EasyPost::Services::Batch","EasyPost/Services/Batch.html#method-i-retrieve","(id)","<p>Retrieve a Batch\n"],["retrieve","EasyPost::Services::CarrierAccount","EasyPost/Services/CarrierAccount.html#method-i-retrieve","(id)","<p>Retrieve a carrier account\n"],["retrieve","EasyPost::Services::CarrierMetadata","EasyPost/Services/CarrierMetadata.html#method-i-retrieve","(carriers = [], types = [])","<p>Retrieve metadata for carrier(s).\n"],["retrieve","EasyPost::Services::Claim","EasyPost/Services/Claim.html#method-i-retrieve","(id)","<p>Retrieve an Claim object\n"],["retrieve","EasyPost::Services::CustomsInfo","EasyPost/Services/CustomsInfo.html#method-i-retrieve","(id)","<p>Retrieve a CustomsInfo object\n"],["retrieve","EasyPost::Services::CustomsItem","EasyPost/Services/CustomsItem.html#method-i-retrieve","(id)","<p>Retrieve a CustomsItem object\n"],["retrieve","EasyPost::Services::EndShipper","EasyPost/Services/EndShipper.html#method-i-retrieve","(id)","<p>Retrieve an EndShipper object.\n"],["retrieve","EasyPost::Services::Event","EasyPost/Services/Event.html#method-i-retrieve","(id)","<p>Retrieve an Event object\n"],["retrieve","EasyPost::Services::Insurance","EasyPost/Services/Insurance.html#method-i-retrieve","(id)","<p>Retrieve an Insurance object\n"],["retrieve","EasyPost::Services::Order","EasyPost/Services/Order.html#method-i-retrieve","(id)","<p>Retrieve an Order object\n"],["retrieve","EasyPost::Services::Parcel","EasyPost/Services/Parcel.html#method-i-retrieve","(id)","<p>Retrieve a Parcel object\n"],["retrieve","EasyPost::Services::Pickup","EasyPost/Services/Pickup.html#method-i-retrieve","(id)","<p>Retrieve a Pickup object\n"],["retrieve","EasyPost::Services::Rate","EasyPost/Services/Rate.html#method-i-retrieve","(id)","<p>Retrieve a Rate\n"],["retrieve","EasyPost::Services::Refund","EasyPost/Services/Refund.html#method-i-retrieve","(id)","<p>Retrieve a Refund object\n"],["retrieve","EasyPost::Services::Report","EasyPost/Services/Report.html#method-i-retrieve","(id)","<p>Retrieve a Report\n"],["retrieve","EasyPost::Services::ScanForm","EasyPost/Services/ScanForm.html#method-i-retrieve","(id)","<p>Retrieve a ScanForm.\n"],["retrieve","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-retrieve","(id)","<p>Retrieve a Shipment.\n"],["retrieve","EasyPost::Services::Tracker","EasyPost/Services/Tracker.html#method-i-retrieve","(id)","<p>Retrieve a Tracker\n"],["retrieve","EasyPost::Services::User","EasyPost/Services/User.html#method-i-retrieve","(id)","<p>Retrieve a user\n"],["retrieve","EasyPost::Services::Webhook","EasyPost/Services/Webhook.html#method-i-retrieve","(id)","<p>Retrieve a Webhook\n"],["retrieve_all_payloads","EasyPost::Services::Event","EasyPost/Services/Event.html#method-i-retrieve_all_payloads","(event_id)","<p>Retrieve all payloads for an event.\n"],["retrieve_api_keys_for_user","EasyPost::Services::ApiKey","EasyPost/Services/ApiKey.html#method-i-retrieve_api_keys_for_user","(id)","<p>Retrieve a list of ApiKey objects (works for the authenticated user or a child user).\n"],["retrieve_estimated_delivery_date","EasyPost::Services::Shipment","EasyPost/Services/Shipment.html#method-i-retrieve_estimated_delivery_date","(id, planned_ship_date)","<p>Retrieves the estimated delivery date of each Rate via SmartRate.\n"],["retrieve_me","EasyPost::Services::User","EasyPost/Services/User.html#method-i-retrieve_me","()","<p>Retrieve the authenticated User.\n"],["retrieve_payload","EasyPost::Services::Event","EasyPost/Services/Event.html#method-i-retrieve_payload","(event_id, payload_id)","<p>Retrieve a specific payload for an event.\n"],["retrieve_payment_methods","EasyPost::Services::Billing","EasyPost/Services/Billing.html#method-i-retrieve_payment_methods","()","<p>Retrieve all payment methods.\n"],["retrieve_stateless_rates","EasyPost::Services::BetaRate","EasyPost/Services/BetaRate.html#method-i-retrieve_stateless_rates","(params = {})","<p>Retrieve a list of stateless rates.\n"],["ruby_patchlevel","EasyPost::InternalUtilities::System","EasyPost/InternalUtilities/System.html#method-c-ruby_patchlevel","()",""],["ruby_version","EasyPost::InternalUtilities::System","EasyPost/InternalUtilities/System.html#method-c-ruby_version","()",""],["subscribe","EasyPost::Hooks","EasyPost/Hooks.html#method-c-subscribe","(type, name, block)",""],["subscribe_request_hook","EasyPost::Client","EasyPost/Client.html#method-i-subscribe_request_hook","(name = SecureRandom.hex.to_sym, &block)","<p>Subscribe a request hook\n<p>@param name [Symbol] the name of the hook. Defaults ot a ranom hexadecimal-based …\n"],["subscribe_response_hook","EasyPost::Client","EasyPost/Client.html#method-i-subscribe_response_hook","(name = SecureRandom.hex.to_sym, &block)","<p>Subscribe a response hook\n<p>@param name [Symbol] the name of the hook. Defaults ot a ranom hexadecimal-based …\n"],["to_hash","EasyPost::Models::Object","EasyPost/Models/Object.html#method-i-to_hash","()","<p>Convert object to hash\n"],["to_s","EasyPost::Models::Object","EasyPost/Models/Object.html#method-i-to_s","(*_args)","<p>Convert to a string.\n"],["to_snake_case","EasyPost::InternalUtilities","EasyPost/InternalUtilities.html#method-c-to_snake_case","(str)","<p>Convert a string to snake case\n"],["unsubscribe","EasyPost::Hooks","EasyPost/Hooks.html#method-c-unsubscribe","(type, name)",""],["unsubscribe_all","EasyPost::Hooks","EasyPost/Hooks.html#method-c-unsubscribe_all","(type)",""],["unsubscribe_all_request_hooks","EasyPost::Client","EasyPost/Client.html#method-i-unsubscribe_all_request_hooks","()","<p>Unsubscribe all request hooks\n<p>@return [Hash] a hash containing all request hook subscriptions\n"],["unsubscribe_all_response_hooks","EasyPost::Client","EasyPost/Client.html#method-i-unsubscribe_all_response_hooks","()","<p>Unsubscribe all response hooks\n<p>@return [Hash] a hash containing all response hook subscriptions\n"],["unsubscribe_request_hook","EasyPost::Client","EasyPost/Client.html#method-i-unsubscribe_request_hook","(name)","<p>Unsubscribe a request hook\n<p>@param name [Symbol] the name of the hook @return [Block] the hook code block …\n"],["unsubscribe_response_hook","EasyPost::Client","EasyPost/Client.html#method-i-unsubscribe_response_hook","(name)","<p>Unsubscribe a response hook\n<p>@param name [Symbol] the name of the hook @return [Block] the hook code block …\n"],["update","EasyPost::Services::CarrierAccount","EasyPost/Services/CarrierAccount.html#method-i-update","(id, params = {})","<p>Update a carrier account\n"],["update","EasyPost::Services::EndShipper","EasyPost/Services/EndShipper.html#method-i-update","(id, params)","<p>Updates an EndShipper object. This requires all parameters to be set.\n"],["update","EasyPost::Services::User","EasyPost/Services/User.html#method-i-update","(id, params = {})","<p>Update a User\n"],["update","EasyPost::Services::Webhook","EasyPost/Services/Webhook.html#method-i-update","(id, params = {})","<p>Update a Webhook.\n"],["update_brand","EasyPost::Services::User","EasyPost/Services/User.html#method-i-update_brand","(id, params = {})","<p>Update the Brand of a User.\n"],["update_email","EasyPost::Services::ReferralCustomer","EasyPost/Services/ReferralCustomer.html#method-i-update_email","(user_id, email)","<p>Update a referral customer. This function requires the Partner User’s API key.\n"],["validate_webhook","EasyPost::Util","EasyPost/Util.html#method-c-validate_webhook","(event_body, headers, webhook_secret)","<p>Validate a webhook by comparing the HMAC signature header sent from EasyPost to your shared secret.  …\n"],["verify","EasyPost::Services::Address","EasyPost/Services/Address.html#method-i-verify","(id)","<p>Verify an Address.\n"]]}}